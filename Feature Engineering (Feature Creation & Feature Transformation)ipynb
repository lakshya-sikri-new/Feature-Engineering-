{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cf40ed00-1405-4253-8c67-951ee40106e0",
   "metadata": {},
   "source": [
    "# Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "80915f5d-28f6-4369-ad7f-fc50c5ed2f7e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a8d37d3-bd2b-47c8-9767-22fae31f7b5f",
   "metadata": {},
   "source": [
    "# Data Loading and exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f53d0f55-f286-490b-b7a4-720774547a4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\lakshya sikri\\Downloads\\SuperStoreOrders.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bf4a18f2-50dd-4175-8688-ba5d95c5aae2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>segment</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>region</th>\n",
       "      <th>...</th>\n",
       "      <th>category</th>\n",
       "      <th>sub_category</th>\n",
       "      <th>product_name</th>\n",
       "      <th>sales</th>\n",
       "      <th>quantity</th>\n",
       "      <th>discount</th>\n",
       "      <th>profit</th>\n",
       "      <th>shipping_cost</th>\n",
       "      <th>order_priority</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AG-2011-2040</td>\n",
       "      <td>1/1/2011</td>\n",
       "      <td>6/1/2011</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Constantine</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Tenex Lockers, Blue</td>\n",
       "      <td>408</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>106.140</td>\n",
       "      <td>35.46</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>1/1/2011</td>\n",
       "      <td>8/1/2011</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Supplies</td>\n",
       "      <td>Acme Trimmer, High Speed</td>\n",
       "      <td>120</td>\n",
       "      <td>3</td>\n",
       "      <td>0.1</td>\n",
       "      <td>36.036</td>\n",
       "      <td>9.72</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HU-2011-1220</td>\n",
       "      <td>1/1/2011</td>\n",
       "      <td>5/1/2011</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Budapest</td>\n",
       "      <td>Hungary</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Tenex Box, Single Width</td>\n",
       "      <td>66</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.640</td>\n",
       "      <td>8.17</td>\n",
       "      <td>High</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IT-2011-3647632</td>\n",
       "      <td>1/1/2011</td>\n",
       "      <td>5/1/2011</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>Home Office</td>\n",
       "      <td>Stockholm</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>EU</td>\n",
       "      <td>North</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Paper</td>\n",
       "      <td>Enermax Note Cards, Premium</td>\n",
       "      <td>45</td>\n",
       "      <td>3</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-26.055</td>\n",
       "      <td>4.82</td>\n",
       "      <td>High</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>1/1/2011</td>\n",
       "      <td>8/1/2011</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Furnishings</td>\n",
       "      <td>Eldon Light Bulb, Duo Pack</td>\n",
       "      <td>114</td>\n",
       "      <td>5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>37.770</td>\n",
       "      <td>4.70</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id order_date ship_date       ship_mode    customer_name  \\\n",
       "0     AG-2011-2040   1/1/2011  6/1/2011  Standard Class  Toby Braunhardt   \n",
       "1    IN-2011-47883   1/1/2011  8/1/2011  Standard Class      Joseph Holt   \n",
       "2     HU-2011-1220   1/1/2011  5/1/2011    Second Class    Annie Thurman   \n",
       "3  IT-2011-3647632   1/1/2011  5/1/2011    Second Class     Eugene Moren   \n",
       "4    IN-2011-47883   1/1/2011  8/1/2011  Standard Class      Joseph Holt   \n",
       "\n",
       "       segment            state    country  market   region  ...  \\\n",
       "0     Consumer      Constantine    Algeria  Africa   Africa  ...   \n",
       "1     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "2     Consumer         Budapest    Hungary    EMEA     EMEA  ...   \n",
       "3  Home Office        Stockholm     Sweden      EU    North  ...   \n",
       "4     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "\n",
       "          category sub_category                 product_name sales quantity  \\\n",
       "0  Office Supplies      Storage          Tenex Lockers, Blue   408        2   \n",
       "1  Office Supplies     Supplies     Acme Trimmer, High Speed   120        3   \n",
       "2  Office Supplies      Storage      Tenex Box, Single Width    66        4   \n",
       "3  Office Supplies        Paper  Enermax Note Cards, Premium    45        3   \n",
       "4        Furniture  Furnishings   Eldon Light Bulb, Duo Pack   114        5   \n",
       "\n",
       "   discount   profit  shipping_cost  order_priority  year  \n",
       "0       0.0  106.140          35.46          Medium  2011  \n",
       "1       0.1   36.036           9.72          Medium  2011  \n",
       "2       0.0   29.640           8.17            High  2011  \n",
       "3       0.5  -26.055           4.82            High  2011  \n",
       "4       0.1   37.770           4.70          Medium  2011  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "64f803ac-e1af-4ef7-9ffb-e71faa10ea27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>segment</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>region</th>\n",
       "      <th>...</th>\n",
       "      <th>category</th>\n",
       "      <th>sub_category</th>\n",
       "      <th>product_name</th>\n",
       "      <th>sales</th>\n",
       "      <th>quantity</th>\n",
       "      <th>discount</th>\n",
       "      <th>profit</th>\n",
       "      <th>shipping_cost</th>\n",
       "      <th>order_priority</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>51285</th>\n",
       "      <td>CA-2014-115427</td>\n",
       "      <td>31-12-2014</td>\n",
       "      <td>4/1/2015</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Erica Bern</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>California</td>\n",
       "      <td>United States</td>\n",
       "      <td>US</td>\n",
       "      <td>West</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Binders</td>\n",
       "      <td>Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>4.5188</td>\n",
       "      <td>0.89</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51286</th>\n",
       "      <td>MO-2014-2560</td>\n",
       "      <td>31-12-2014</td>\n",
       "      <td>5/1/2015</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Liz Preis</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Souss-Massa-DraÃ¢</td>\n",
       "      <td>Morocco</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Binders</td>\n",
       "      <td>Wilson Jones Hole Reinforcements, Clear</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.4200</td>\n",
       "      <td>0.49</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51287</th>\n",
       "      <td>MX-2014-110527</td>\n",
       "      <td>31-12-2014</td>\n",
       "      <td>2/1/2015</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Charlotte Melton</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Managua</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>LATAM</td>\n",
       "      <td>Central</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Hon Color Coded Labels, 5000 Label Set</td>\n",
       "      <td>26</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3600</td>\n",
       "      <td>0.35</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51288</th>\n",
       "      <td>MX-2014-114783</td>\n",
       "      <td>31-12-2014</td>\n",
       "      <td>6/1/2015</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Tamara Dahlen</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Chihuahua</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>LATAM</td>\n",
       "      <td>North</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Hon Legal Exhibit Labels, Alphabetical</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5600</td>\n",
       "      <td>0.20</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51289</th>\n",
       "      <td>CA-2014-156720</td>\n",
       "      <td>31-12-2014</td>\n",
       "      <td>4/1/2015</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Jill Matthias</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Colorado</td>\n",
       "      <td>United States</td>\n",
       "      <td>US</td>\n",
       "      <td>West</td>\n",
       "      <td>...</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Fasteners</td>\n",
       "      <td>Bagged Rubber Bands</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>-0.6048</td>\n",
       "      <td>0.17</td>\n",
       "      <td>Medium</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             order_id  order_date ship_date       ship_mode     customer_name  \\\n",
       "51285  CA-2014-115427  31-12-2014  4/1/2015  Standard Class        Erica Bern   \n",
       "51286    MO-2014-2560  31-12-2014  5/1/2015  Standard Class         Liz Preis   \n",
       "51287  MX-2014-110527  31-12-2014  2/1/2015    Second Class  Charlotte Melton   \n",
       "51288  MX-2014-114783  31-12-2014  6/1/2015  Standard Class     Tamara Dahlen   \n",
       "51289  CA-2014-156720  31-12-2014  4/1/2015  Standard Class     Jill Matthias   \n",
       "\n",
       "         segment             state        country  market   region  ...  \\\n",
       "51285  Corporate        California  United States      US     West  ...   \n",
       "51286   Consumer  Souss-Massa-DraÃ¢        Morocco  Africa   Africa  ...   \n",
       "51287   Consumer           Managua      Nicaragua   LATAM  Central  ...   \n",
       "51288   Consumer         Chihuahua         Mexico   LATAM    North  ...   \n",
       "51289   Consumer          Colorado  United States      US     West  ...   \n",
       "\n",
       "              category sub_category  \\\n",
       "51285  Office Supplies      Binders   \n",
       "51286  Office Supplies      Binders   \n",
       "51287  Office Supplies       Labels   \n",
       "51288  Office Supplies       Labels   \n",
       "51289  Office Supplies    Fasteners   \n",
       "\n",
       "                                          product_name sales quantity  \\\n",
       "51285  Cardinal Slant-D Ring Binder, Heavy Gauge Vinyl    14        2   \n",
       "51286          Wilson Jones Hole Reinforcements, Clear     4        1   \n",
       "51287           Hon Color Coded Labels, 5000 Label Set    26        3   \n",
       "51288           Hon Legal Exhibit Labels, Alphabetical     7        1   \n",
       "51289                              Bagged Rubber Bands     3        3   \n",
       "\n",
       "       discount   profit  shipping_cost  order_priority  year  \n",
       "51285       0.2   4.5188           0.89          Medium  2014  \n",
       "51286       0.0   0.4200           0.49          Medium  2014  \n",
       "51287       0.0  12.3600           0.35          Medium  2014  \n",
       "51288       0.0   0.5600           0.20          Medium  2014  \n",
       "51289       0.2  -0.6048           0.17          Medium  2014  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40ef4446-64e0-4be7-b781-49be02cfbaf2",
   "metadata": {},
   "source": [
    "# ROWS AND COLUMNS OF DATASET"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d95e4635-104e-4cd7-b96e-10264a1c7b7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['order_id', 'order_date', 'ship_date', 'ship_mode', 'customer_name',\n",
       "       'segment', 'state', 'country', 'market', 'region', 'product_id',\n",
       "       'category', 'sub_category', 'product_name', 'sales', 'quantity',\n",
       "       'discount', 'profit', 'shipping_cost', 'order_priority', 'year'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "38520d41-53f7-4292-a8b8-29b738c7a6b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 51290 entries, 0 to 51289\n",
      "Data columns (total 21 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   order_id        51290 non-null  object \n",
      " 1   order_date      51290 non-null  object \n",
      " 2   ship_date       51290 non-null  object \n",
      " 3   ship_mode       51290 non-null  object \n",
      " 4   customer_name   51290 non-null  object \n",
      " 5   segment         51290 non-null  object \n",
      " 6   state           51290 non-null  object \n",
      " 7   country         51290 non-null  object \n",
      " 8   market          51290 non-null  object \n",
      " 9   region          51290 non-null  object \n",
      " 10  product_id      51290 non-null  object \n",
      " 11  category        51290 non-null  object \n",
      " 12  sub_category    51290 non-null  object \n",
      " 13  product_name    51290 non-null  object \n",
      " 14  sales           51290 non-null  object \n",
      " 15  quantity        51290 non-null  int64  \n",
      " 16  discount        51290 non-null  float64\n",
      " 17  profit          51290 non-null  float64\n",
      " 18  shipping_cost   51290 non-null  float64\n",
      " 19  order_priority  51290 non-null  object \n",
      " 20  year            51290 non-null  int64  \n",
      "dtypes: float64(3), int64(2), object(16)\n",
      "memory usage: 8.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75510c9a-3daf-4964-8672-09267ad41603",
   "metadata": {},
   "source": [
    "# Converting Data Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "e2d1daad-c590-40b4-aad7-30aea1188971",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "order_id           object\n",
       "order_date         object\n",
       "ship_date          object\n",
       "ship_mode          object\n",
       "customer_name      object\n",
       "segment            object\n",
       "state              object\n",
       "country            object\n",
       "market             object\n",
       "region             object\n",
       "product_id         object\n",
       "category           object\n",
       "sub_category       object\n",
       "product_name       object\n",
       "sales              object\n",
       "quantity            int64\n",
       "discount          float64\n",
       "profit            float64\n",
       "shipping_cost     float64\n",
       "order_priority     object\n",
       "year                int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "2bef31bf-be20-41a4-b430-21f1f05936fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['order_date'] = pd.to_datetime(df['order_date'], errors='coerce')\n",
    "df['ship_date'] = pd.to_datetime(df['ship_date'], errors='coerce')\n",
    "df['sales'] = pd.to_numeric(df['sales'], errors='coerce')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d05a8903-b401-4e2b-8a8f-fb98d985b924",
   "metadata": {},
   "source": [
    "# Dealing With Missing Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "3d80ef61-3e37-47fa-985b-0e57bd3560bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "order_id              0\n",
       "order_date        31223\n",
       "ship_date         31456\n",
       "ship_mode             0\n",
       "customer_name         0\n",
       "segment               0\n",
       "state                 0\n",
       "country               0\n",
       "market                0\n",
       "region                0\n",
       "product_id            0\n",
       "category              0\n",
       "sub_category          0\n",
       "product_name          0\n",
       "sales              2630\n",
       "quantity              0\n",
       "discount              0\n",
       "profit                0\n",
       "shipping_cost         0\n",
       "order_priority        0\n",
       "year                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "87f18b26-df78-4dc1-afdf-2b871292223d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['order_date'].fillna(df['order_date'].mode()[0], inplace=True)\n",
    "df['ship_date'].fillna(df['ship_date'].mode()[0], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ff21da51-5bfc-48bd-870c-738c4b13884f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['sales'].fillna(df['sales'].mean(), inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "41e1bf6c-300c-4d3c-92b5-1a12e004a8c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total missing values: 0\n"
     ]
    }
   ],
   "source": [
    "total_missing = df.isnull().sum().sum()\n",
    "print(f'Total missing values: {total_missing}')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c33d4c8-ae98-4476-b39c-08d33b60a50f",
   "metadata": {},
   "source": [
    " # Duplicate rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "8b00b140-8d1c-48d3-808f-6ab23af6b103",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicate rows: 0\n",
      "Duplicate rows after removal: 0\n"
     ]
    }
   ],
   "source": [
    "# Check for duplicates\n",
    "print(\"Duplicate rows:\", df.duplicated().sum())\n",
    "\n",
    "# Drop duplicate rows\n",
    "df = df.drop_duplicates()\n",
    "print(\"Duplicate rows after removal:\", df.duplicated().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be0be8db-451c-4600-b48a-c2b0311967ea",
   "metadata": {},
   "source": [
    "# Feature 1 - Total Revenue\n",
    "Displaying the columns to check the new feature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f16440a7-c67c-4313-8c50-3d94c2524324",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales</th>\n",
       "      <th>profit</th>\n",
       "      <th>Total_revenue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>408.0</td>\n",
       "      <td>106.140</td>\n",
       "      <td>514.140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>120.0</td>\n",
       "      <td>36.036</td>\n",
       "      <td>156.036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>66.0</td>\n",
       "      <td>29.640</td>\n",
       "      <td>95.640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>45.0</td>\n",
       "      <td>-26.055</td>\n",
       "      <td>18.945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>114.0</td>\n",
       "      <td>37.770</td>\n",
       "      <td>151.770</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales   profit  Total_revenue\n",
       "0  408.0  106.140        514.140\n",
       "1  120.0   36.036        156.036\n",
       "2   66.0   29.640         95.640\n",
       "3   45.0  -26.055         18.945\n",
       "4  114.0   37.770        151.770"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Total_revenue'] = df['sales'] + df['profit']\n",
    "df[['sales', 'profit', 'Total_revenue']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b664efbe-18e3-424b-9ea1-6e7b53f98ce6",
   "metadata": {},
   "source": [
    "# Feature 2 - Net profit\n",
    "Displaying the columns to check the new feature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "1b0e3707-2595-4cbe-bee5-bdf7b263ceeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>profit</th>\n",
       "      <th>shipping_cost</th>\n",
       "      <th>quantity</th>\n",
       "      <th>net_profit_per_item</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>106.140</td>\n",
       "      <td>35.46</td>\n",
       "      <td>2</td>\n",
       "      <td>35.340000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>36.036</td>\n",
       "      <td>9.72</td>\n",
       "      <td>3</td>\n",
       "      <td>8.772000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>29.640</td>\n",
       "      <td>8.17</td>\n",
       "      <td>4</td>\n",
       "      <td>5.367500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-26.055</td>\n",
       "      <td>4.82</td>\n",
       "      <td>3</td>\n",
       "      <td>-10.291667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.770</td>\n",
       "      <td>4.70</td>\n",
       "      <td>5</td>\n",
       "      <td>6.614000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>15.342</td>\n",
       "      <td>1.80</td>\n",
       "      <td>2</td>\n",
       "      <td>6.771000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3.120</td>\n",
       "      <td>24.10</td>\n",
       "      <td>1</td>\n",
       "      <td>-20.980000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>110.412</td>\n",
       "      <td>125.32</td>\n",
       "      <td>1</td>\n",
       "      <td>-14.908000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>-319.464</td>\n",
       "      <td>107.10</td>\n",
       "      <td>4</td>\n",
       "      <td>-106.641000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>253.320</td>\n",
       "      <td>81.26</td>\n",
       "      <td>4</td>\n",
       "      <td>43.015000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    profit  shipping_cost  quantity  net_profit_per_item\n",
       "0  106.140          35.46         2            35.340000\n",
       "1   36.036           9.72         3             8.772000\n",
       "2   29.640           8.17         4             5.367500\n",
       "3  -26.055           4.82         3           -10.291667\n",
       "4   37.770           4.70         5             6.614000\n",
       "5   15.342           1.80         2             6.771000\n",
       "6    3.120          24.10         1           -20.980000\n",
       "7  110.412         125.32         1           -14.908000\n",
       "8 -319.464         107.10         4          -106.641000\n",
       "9  253.320          81.26         4            43.015000"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['net_profit_per_item'] = (df['profit'] - df['shipping_cost']) / df['quantity']\n",
    "df[['profit', 'shipping_cost', 'quantity', 'net_profit_per_item']].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df36a7ce-7617-499c-83b3-d1f07eb8c421",
   "metadata": {},
   "source": [
    "# Feature 3 - Geographical Features:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "f847a433-8688-4603-a8de-19b90d56cf7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>region</th>\n",
       "      <th>state_region_interaction</th>\n",
       "      <th>regional_sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Constantine</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Constantine_Africa</td>\n",
       "      <td>560496.479490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>New South Wales_Oceania</td>\n",
       "      <td>665475.441677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Budapest</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>Budapest_EMEA</td>\n",
       "      <td>597782.461652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Stockholm</td>\n",
       "      <td>North</td>\n",
       "      <td>Stockholm_North</td>\n",
       "      <td>833215.727086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>New South Wales_Oceania</td>\n",
       "      <td>665475.441677</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             state   region state_region_interaction  regional_sales\n",
       "0      Constantine   Africa       Constantine_Africa   560496.479490\n",
       "1  New South Wales  Oceania  New South Wales_Oceania   665475.441677\n",
       "2         Budapest     EMEA            Budapest_EMEA   597782.461652\n",
       "3        Stockholm    North          Stockholm_North   833215.727086\n",
       "4  New South Wales  Oceania  New South Wales_Oceania   665475.441677"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['state_region_interaction'] = df['state'] + \"_\" + df['region']\n",
    "df['regional_sales'] = df.groupby('region')['sales'].transform('sum')\n",
    "df[['state', 'region', 'state_region_interaction', 'regional_sales']].head() "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd4764c7-f5f3-417e-ae05-0fa35e19b45d",
   "metadata": {},
   "source": [
    "     State and Region Interactions: Interactions between state and region to understand the distribution of sales by geographic area.\n",
    "                   \n",
    "     Regional Sales: Calculate total sales for each region and create a feature to capture sales dominance in certain regions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "048c0ae2-ee4d-4fb3-88c2-7b1383be4bdf",
   "metadata": {},
   "source": [
    " # Feature 4 Customer-related Features:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "29a91097-9849-47cc-81e2-cb81f8e1e8a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customer_name</th>\n",
       "      <th>sales</th>\n",
       "      <th>customer_lifetime_value</th>\n",
       "      <th>repeat_customer</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>408.0</td>\n",
       "      <td>10573.017838</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>120.0</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>66.0</td>\n",
       "      <td>8008.053514</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>45.0</td>\n",
       "      <td>16468.089190</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>114.0</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     customer_name  sales  customer_lifetime_value  repeat_customer\n",
       "0  Toby Braunhardt  408.0             10573.017838             True\n",
       "1      Joseph Holt  120.0             13578.053514             True\n",
       "2    Annie Thurman   66.0              8008.053514             True\n",
       "3     Eugene Moren   45.0             16468.089190             True\n",
       "4      Joseph Holt  114.0             13578.053514             True"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['customer_lifetime_value'] = df.groupby('customer_name')['sales'].transform('sum')\n",
    "df['repeat_customer'] = df.groupby('customer_name')['order_id'].transform('count') > 1\n",
    "df[['customer_name', 'sales', 'customer_lifetime_value', 'repeat_customer']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21ae8500-dfc8-4a94-9037-2a14b33a1558",
   "metadata": {},
   "source": [
    "    Customer Lifetime Value (CLV): Track the total sales and profit for each customer over time. This helps in understanding high-value customers.\n",
    "    Repeat Customer: Create a binary feature indicating whether the customer has placed multiple orders."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71cd86fa-7e3e-4a71-8f46-d463ff6fbd80",
   "metadata": {},
   "source": [
    "# Feature 5 Interaction between 'quantity' and 'profit'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "633fcd16-5c77-4753-ab57-984880d294d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>profit</th>\n",
       "      <th>quantity_profit_interaction</th>\n",
       "      <th>discount</th>\n",
       "      <th>sales</th>\n",
       "      <th>discount_sales_interaction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Tenex Lockers, Blue</td>\n",
       "      <td>2</td>\n",
       "      <td>106.140</td>\n",
       "      <td>212.280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>408.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Acme Trimmer, High Speed</td>\n",
       "      <td>3</td>\n",
       "      <td>36.036</td>\n",
       "      <td>108.108</td>\n",
       "      <td>0.1</td>\n",
       "      <td>120.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Tenex Box, Single Width</td>\n",
       "      <td>4</td>\n",
       "      <td>29.640</td>\n",
       "      <td>118.560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Enermax Note Cards, Premium</td>\n",
       "      <td>3</td>\n",
       "      <td>-26.055</td>\n",
       "      <td>-78.165</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.0</td>\n",
       "      <td>22.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Eldon Light Bulb, Duo Pack</td>\n",
       "      <td>5</td>\n",
       "      <td>37.770</td>\n",
       "      <td>188.850</td>\n",
       "      <td>0.1</td>\n",
       "      <td>114.0</td>\n",
       "      <td>11.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  product_name  quantity   profit  \\\n",
       "0          Tenex Lockers, Blue         2  106.140   \n",
       "1     Acme Trimmer, High Speed         3   36.036   \n",
       "2      Tenex Box, Single Width         4   29.640   \n",
       "3  Enermax Note Cards, Premium         3  -26.055   \n",
       "4   Eldon Light Bulb, Duo Pack         5   37.770   \n",
       "\n",
       "   quantity_profit_interaction  discount  sales  discount_sales_interaction  \n",
       "0                      212.280       0.0  408.0                         0.0  \n",
       "1                      108.108       0.1  120.0                        12.0  \n",
       "2                      118.560       0.0   66.0                         0.0  \n",
       "3                      -78.165       0.5   45.0                        22.5  \n",
       "4                      188.850       0.1  114.0                        11.4  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['quantity_profit_interaction'] = df['quantity'] * df['profit']\n",
    "df['discount_sales_interaction'] = df['discount'] * df['sales']\n",
    "df[['product_name', 'quantity', 'profit', 'quantity_profit_interaction', 'discount', 'sales', 'discount_sales_interaction']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17290597-f4b6-4153-9ceb-7562aff76c7c",
   "metadata": {},
   "source": [
    "    Interaction between 'quantity' and 'profit' to capture overall profitability based on quantity sold and  Interaction between 'discount' and 'sales' to measure impact of discounts on sales"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bcfc0961-0fbc-444b-82a5-1d701f220411",
   "metadata": {},
   "source": [
    "# Feature 6 - Ratio of Profit and Sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "727f5be6-e258-4881-abd8-6aa8adf99b68",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>profit</th>\n",
       "      <th>sales</th>\n",
       "      <th>profit_sales_ratio</th>\n",
       "      <th>sales</th>\n",
       "      <th>quantity</th>\n",
       "      <th>sales_quantity_ratio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>106.140</td>\n",
       "      <td>408.0</td>\n",
       "      <td>0.260147</td>\n",
       "      <td>408.0</td>\n",
       "      <td>2</td>\n",
       "      <td>204.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>36.036</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.300300</td>\n",
       "      <td>120.0</td>\n",
       "      <td>3</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>29.640</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.449091</td>\n",
       "      <td>66.0</td>\n",
       "      <td>4</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-26.055</td>\n",
       "      <td>45.0</td>\n",
       "      <td>-0.579000</td>\n",
       "      <td>45.0</td>\n",
       "      <td>3</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.770</td>\n",
       "      <td>114.0</td>\n",
       "      <td>0.331316</td>\n",
       "      <td>114.0</td>\n",
       "      <td>5</td>\n",
       "      <td>22.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    profit  sales  profit_sales_ratio  sales  quantity  sales_quantity_ratio\n",
       "0  106.140  408.0            0.260147  408.0         2                 204.0\n",
       "1   36.036  120.0            0.300300  120.0         3                  40.0\n",
       "2   29.640   66.0            0.449091   66.0         4                  16.5\n",
       "3  -26.055   45.0           -0.579000   45.0         3                  15.0\n",
       "4   37.770  114.0            0.331316  114.0         5                  22.8"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['profit_sales_ratio'] = df['profit'] / df['sales']\n",
    "df['sales_quantity_ratio'] = df['sales'] / df['quantity']\n",
    "df[['profit', 'sales', 'profit_sales_ratio', 'sales', 'quantity', 'sales_quantity_ratio']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4181f5d4-b69c-40ba-9692-82d868d5f5a2",
   "metadata": {},
   "source": [
    "    Creating ratio-based features helps capture relationships between two numerical variables."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ba56024-6b99-47f9-bb1d-9a95ed29eee2",
   "metadata": {},
   "source": [
    "# Customer Segmentation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "78cbd5fd-694c-4369-bb7b-46fb6a099ade",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>segment</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>region</th>\n",
       "      <th>...</th>\n",
       "      <th>state_region_interaction</th>\n",
       "      <th>regional_sales</th>\n",
       "      <th>customer_lifetime_value</th>\n",
       "      <th>repeat_customer</th>\n",
       "      <th>quantity_profit_interaction</th>\n",
       "      <th>discount_sales_interaction</th>\n",
       "      <th>profit_sales_ratio</th>\n",
       "      <th>sales_quantity_ratio</th>\n",
       "      <th>customer_order_count</th>\n",
       "      <th>customer_clv</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AG-2011-2040</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-06-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Constantine</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>...</td>\n",
       "      <td>Constantine_Africa</td>\n",
       "      <td>560496.479490</td>\n",
       "      <td>10573.017838</td>\n",
       "      <td>True</td>\n",
       "      <td>212.280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.260147</td>\n",
       "      <td>204.0</td>\n",
       "      <td>67</td>\n",
       "      <td>1247.46136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>New South Wales_Oceania</td>\n",
       "      <td>665475.441677</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>108.108</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.300300</td>\n",
       "      <td>40.0</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HU-2011-1220</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Budapest</td>\n",
       "      <td>Hungary</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>...</td>\n",
       "      <td>Budapest_EMEA</td>\n",
       "      <td>597782.461652</td>\n",
       "      <td>8008.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>118.560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.449091</td>\n",
       "      <td>16.5</td>\n",
       "      <td>55</td>\n",
       "      <td>2659.77790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IT-2011-3647632</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>Home Office</td>\n",
       "      <td>Stockholm</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>EU</td>\n",
       "      <td>North</td>\n",
       "      <td>...</td>\n",
       "      <td>Stockholm_North</td>\n",
       "      <td>833215.727086</td>\n",
       "      <td>16468.089190</td>\n",
       "      <td>True</td>\n",
       "      <td>-78.165</td>\n",
       "      <td>22.5</td>\n",
       "      <td>-0.579000</td>\n",
       "      <td>15.0</td>\n",
       "      <td>94</td>\n",
       "      <td>3624.25176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>New South Wales_Oceania</td>\n",
       "      <td>665475.441677</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>188.850</td>\n",
       "      <td>11.4</td>\n",
       "      <td>0.331316</td>\n",
       "      <td>22.8</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id order_date  ship_date       ship_mode    customer_name  \\\n",
       "0     AG-2011-2040 2011-01-01 2011-06-01  Standard Class  Toby Braunhardt   \n",
       "1    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "2     HU-2011-1220 2011-01-01 2011-05-01    Second Class    Annie Thurman   \n",
       "3  IT-2011-3647632 2011-01-01 2011-05-01    Second Class     Eugene Moren   \n",
       "4    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "\n",
       "       segment            state    country  market   region  ...  \\\n",
       "0     Consumer      Constantine    Algeria  Africa   Africa  ...   \n",
       "1     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "2     Consumer         Budapest    Hungary    EMEA     EMEA  ...   \n",
       "3  Home Office        Stockholm     Sweden      EU    North  ...   \n",
       "4     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "\n",
       "  state_region_interaction regional_sales customer_lifetime_value  \\\n",
       "0       Constantine_Africa  560496.479490            10573.017838   \n",
       "1  New South Wales_Oceania  665475.441677            13578.053514   \n",
       "2            Budapest_EMEA  597782.461652             8008.053514   \n",
       "3          Stockholm_North  833215.727086            16468.089190   \n",
       "4  New South Wales_Oceania  665475.441677            13578.053514   \n",
       "\n",
       "  repeat_customer  quantity_profit_interaction  discount_sales_interaction  \\\n",
       "0            True                      212.280                         0.0   \n",
       "1            True                      108.108                        12.0   \n",
       "2            True                      118.560                         0.0   \n",
       "3            True                      -78.165                        22.5   \n",
       "4            True                      188.850                        11.4   \n",
       "\n",
       "   profit_sales_ratio  sales_quantity_ratio  customer_order_count customer_clv  \n",
       "0            0.260147                 204.0                    67   1247.46136  \n",
       "1            0.300300                  40.0                    85    386.67820  \n",
       "2            0.449091                  16.5                    55   2659.77790  \n",
       "3           -0.579000                  15.0                    94   3624.25176  \n",
       "4            0.331316                  22.8                    85    386.67820  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Customer Order Count\n",
    "df['customer_order_count'] = df.groupby('customer_name')['order_id'].transform('count')\n",
    "\n",
    "# Customer Lifetime Value (CLV)\n",
    "df['customer_clv'] = df.groupby('customer_name')['profit'].transform('sum')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ea3ec90-5bad-4441-9ed7-9f64c33691e7",
   "metadata": {},
   "source": [
    "# Market Profitability &  Regional Discount Trends"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ef607ce8-29cc-422e-88f3-0e2089a2a99b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>segment</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>region</th>\n",
       "      <th>...</th>\n",
       "      <th>customer_lifetime_value</th>\n",
       "      <th>repeat_customer</th>\n",
       "      <th>quantity_profit_interaction</th>\n",
       "      <th>discount_sales_interaction</th>\n",
       "      <th>profit_sales_ratio</th>\n",
       "      <th>sales_quantity_ratio</th>\n",
       "      <th>customer_order_count</th>\n",
       "      <th>customer_clv</th>\n",
       "      <th>market_profit</th>\n",
       "      <th>region_discount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AG-2011-2040</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-06-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Constantine</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>...</td>\n",
       "      <td>10573.017838</td>\n",
       "      <td>True</td>\n",
       "      <td>212.280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.260147</td>\n",
       "      <td>204.0</td>\n",
       "      <td>67</td>\n",
       "      <td>1247.46136</td>\n",
       "      <td>88871.6310</td>\n",
       "      <td>0.156704</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>108.108</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.300300</td>\n",
       "      <td>40.0</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "      <td>437577.5790</td>\n",
       "      <td>0.153169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HU-2011-1220</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Budapest</td>\n",
       "      <td>Hungary</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>...</td>\n",
       "      <td>8008.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>118.560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.449091</td>\n",
       "      <td>16.5</td>\n",
       "      <td>55</td>\n",
       "      <td>2659.77790</td>\n",
       "      <td>43897.9710</td>\n",
       "      <td>0.196083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IT-2011-3647632</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>Home Office</td>\n",
       "      <td>Stockholm</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>EU</td>\n",
       "      <td>North</td>\n",
       "      <td>...</td>\n",
       "      <td>16468.089190</td>\n",
       "      <td>True</td>\n",
       "      <td>-78.165</td>\n",
       "      <td>22.5</td>\n",
       "      <td>-0.579000</td>\n",
       "      <td>15.0</td>\n",
       "      <td>94</td>\n",
       "      <td>3624.25176</td>\n",
       "      <td>372829.7415</td>\n",
       "      <td>0.096056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>13578.053514</td>\n",
       "      <td>True</td>\n",
       "      <td>188.850</td>\n",
       "      <td>11.4</td>\n",
       "      <td>0.331316</td>\n",
       "      <td>22.8</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "      <td>437577.5790</td>\n",
       "      <td>0.153169</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id order_date  ship_date       ship_mode    customer_name  \\\n",
       "0     AG-2011-2040 2011-01-01 2011-06-01  Standard Class  Toby Braunhardt   \n",
       "1    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "2     HU-2011-1220 2011-01-01 2011-05-01    Second Class    Annie Thurman   \n",
       "3  IT-2011-3647632 2011-01-01 2011-05-01    Second Class     Eugene Moren   \n",
       "4    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "\n",
       "       segment            state    country  market   region  ...  \\\n",
       "0     Consumer      Constantine    Algeria  Africa   Africa  ...   \n",
       "1     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "2     Consumer         Budapest    Hungary    EMEA     EMEA  ...   \n",
       "3  Home Office        Stockholm     Sweden      EU    North  ...   \n",
       "4     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "\n",
       "  customer_lifetime_value repeat_customer quantity_profit_interaction  \\\n",
       "0            10573.017838            True                     212.280   \n",
       "1            13578.053514            True                     108.108   \n",
       "2             8008.053514            True                     118.560   \n",
       "3            16468.089190            True                     -78.165   \n",
       "4            13578.053514            True                     188.850   \n",
       "\n",
       "  discount_sales_interaction  profit_sales_ratio  sales_quantity_ratio  \\\n",
       "0                        0.0            0.260147                 204.0   \n",
       "1                       12.0            0.300300                  40.0   \n",
       "2                        0.0            0.449091                  16.5   \n",
       "3                       22.5           -0.579000                  15.0   \n",
       "4                       11.4            0.331316                  22.8   \n",
       "\n",
       "   customer_order_count  customer_clv  market_profit region_discount  \n",
       "0                    67    1247.46136     88871.6310        0.156704  \n",
       "1                    85     386.67820    437577.5790        0.153169  \n",
       "2                    55    2659.77790     43897.9710        0.196083  \n",
       "3                    94    3624.25176    372829.7415        0.096056  \n",
       "4                    85     386.67820    437577.5790        0.153169  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Market Profitability\n",
    "df['market_profit'] = df.groupby('market')['profit'].transform('sum')\n",
    "\n",
    "# Regional Discount Trends\n",
    "df['region_discount'] = df.groupby('region')['discount'].transform('mean')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fe45c56-757b-4877-9bc3-dc89d343deb1",
   "metadata": {},
   "source": [
    " # Product Insights"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "f134ac7f-f02c-4eef-a4fe-e78dbf890268",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>segment</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>region</th>\n",
       "      <th>...</th>\n",
       "      <th>profit_sales_ratio</th>\n",
       "      <th>sales_quantity_ratio</th>\n",
       "      <th>customer_order_count</th>\n",
       "      <th>customer_clv</th>\n",
       "      <th>market_profit</th>\n",
       "      <th>region_discount</th>\n",
       "      <th>product_sales_count</th>\n",
       "      <th>profit_margin</th>\n",
       "      <th>category_sales</th>\n",
       "      <th>is_discounted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AG-2011-2040</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-06-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Constantine</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>...</td>\n",
       "      <td>0.260147</td>\n",
       "      <td>204.0</td>\n",
       "      <td>67</td>\n",
       "      <td>1247.46136</td>\n",
       "      <td>88871.6310</td>\n",
       "      <td>0.156704</td>\n",
       "      <td>32</td>\n",
       "      <td>0.260147</td>\n",
       "      <td>2.876725e+06</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>0.300300</td>\n",
       "      <td>40.0</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "      <td>437577.5790</td>\n",
       "      <td>0.153169</td>\n",
       "      <td>20</td>\n",
       "      <td>0.300300</td>\n",
       "      <td>2.876725e+06</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HU-2011-1220</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Budapest</td>\n",
       "      <td>Hungary</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>...</td>\n",
       "      <td>0.449091</td>\n",
       "      <td>16.5</td>\n",
       "      <td>55</td>\n",
       "      <td>2659.77790</td>\n",
       "      <td>43897.9710</td>\n",
       "      <td>0.196083</td>\n",
       "      <td>14</td>\n",
       "      <td>0.449091</td>\n",
       "      <td>2.876725e+06</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IT-2011-3647632</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>Home Office</td>\n",
       "      <td>Stockholm</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>EU</td>\n",
       "      <td>North</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.579000</td>\n",
       "      <td>15.0</td>\n",
       "      <td>94</td>\n",
       "      <td>3624.25176</td>\n",
       "      <td>372829.7415</td>\n",
       "      <td>0.096056</td>\n",
       "      <td>17</td>\n",
       "      <td>-0.579000</td>\n",
       "      <td>2.876725e+06</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>...</td>\n",
       "      <td>0.331316</td>\n",
       "      <td>22.8</td>\n",
       "      <td>85</td>\n",
       "      <td>386.67820</td>\n",
       "      <td>437577.5790</td>\n",
       "      <td>0.153169</td>\n",
       "      <td>24</td>\n",
       "      <td>0.331316</td>\n",
       "      <td>2.562792e+06</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id order_date  ship_date       ship_mode    customer_name  \\\n",
       "0     AG-2011-2040 2011-01-01 2011-06-01  Standard Class  Toby Braunhardt   \n",
       "1    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "2     HU-2011-1220 2011-01-01 2011-05-01    Second Class    Annie Thurman   \n",
       "3  IT-2011-3647632 2011-01-01 2011-05-01    Second Class     Eugene Moren   \n",
       "4    IN-2011-47883 2011-01-01 2011-08-01  Standard Class      Joseph Holt   \n",
       "\n",
       "       segment            state    country  market   region  ...  \\\n",
       "0     Consumer      Constantine    Algeria  Africa   Africa  ...   \n",
       "1     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "2     Consumer         Budapest    Hungary    EMEA     EMEA  ...   \n",
       "3  Home Office        Stockholm     Sweden      EU    North  ...   \n",
       "4     Consumer  New South Wales  Australia    APAC  Oceania  ...   \n",
       "\n",
       "  profit_sales_ratio sales_quantity_ratio customer_order_count customer_clv  \\\n",
       "0           0.260147                204.0                   67   1247.46136   \n",
       "1           0.300300                 40.0                   85    386.67820   \n",
       "2           0.449091                 16.5                   55   2659.77790   \n",
       "3          -0.579000                 15.0                   94   3624.25176   \n",
       "4           0.331316                 22.8                   85    386.67820   \n",
       "\n",
       "   market_profit  region_discount  product_sales_count  profit_margin  \\\n",
       "0     88871.6310         0.156704                   32       0.260147   \n",
       "1    437577.5790         0.153169                   20       0.300300   \n",
       "2     43897.9710         0.196083                   14       0.449091   \n",
       "3    372829.7415         0.096056                   17      -0.579000   \n",
       "4    437577.5790         0.153169                   24       0.331316   \n",
       "\n",
       "   category_sales is_discounted  \n",
       "0    2.876725e+06         False  \n",
       "1    2.876725e+06         False  \n",
       "2    2.876725e+06         False  \n",
       "3    2.876725e+06          True  \n",
       "4    2.562792e+06         False  \n",
       "\n",
       "[5 rows x 39 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Product Sales Count\n",
    "df['product_sales_count'] = df.groupby('product_id')['quantity'].transform('sum')\n",
    "\n",
    "# Product Profit Margin\n",
    "df['profit_margin'] = df['profit'] / pd.to_numeric(df['sales'], errors='coerce')\n",
    "\n",
    "# Category Sales Contribution\n",
    "df['category_sales'] = df.groupby('category')['sales'].transform('sum')\n",
    "\n",
    "# Discounted Products Flag\n",
    "discount_threshold = 0.2\n",
    "df['is_discounted'] = df['discount'] > discount_threshold\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8ffdf53-f2f8-4643-8ab1-a6c1583e42d6",
   "metadata": {},
   "source": [
    "    Popular products (high sales count) indicate customer preferences. These products can be promoted more or bundled with less popular products to boost sales and Products with a low profit margin but high sales volume may need re-evaluation of pricing or production costs. High-margin products can be prioritized for marketing, Categories with high sales contributions show what drives revenue. This information is essential for inventory management and marketing."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eebb34c9-2a94-4b29-97ca-b432fbdc3c19",
   "metadata": {},
   "source": [
    "# Unique Count Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "14c31258-6383-44c6-be51-3147a5a9ba30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customer_name</th>\n",
       "      <th>unique_products_per_customer</th>\n",
       "      <th>region</th>\n",
       "      <th>unique_customers_per_region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>67</td>\n",
       "      <td>Africa</td>\n",
       "      <td>754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>85</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>55</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>94</td>\n",
       "      <td>North</td>\n",
       "      <td>763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>85</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>705</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     customer_name  unique_products_per_customer   region  \\\n",
       "0  Toby Braunhardt                            67   Africa   \n",
       "1      Joseph Holt                            85  Oceania   \n",
       "2    Annie Thurman                            55     EMEA   \n",
       "3     Eugene Moren                            94    North   \n",
       "4      Joseph Holt                            85  Oceania   \n",
       "\n",
       "   unique_customers_per_region  \n",
       "0                          754  \n",
       "1                          705  \n",
       "2                          760  \n",
       "3                          763  \n",
       "4                          705  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['unique_products_per_customer'] = df.groupby('customer_name')['product_id'].transform('nunique')\n",
    "df['unique_customers_per_region'] = df.groupby('region')['customer_name'].transform('nunique')\n",
    "df[['customer_name', 'unique_products_per_customer', 'region', 'unique_customers_per_region']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62a37501-4154-42d1-bc88-0e74055d377b",
   "metadata": {},
   "source": [
    "    Counting the number of unique values for certain categories can provide insights into diversity or customer behavior."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4db87d6-21b3-4b5b-9c2e-d20d14aa4af0",
   "metadata": {},
   "source": [
    "# Percentile Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "27b7b23a-9d85-4478-86d0-4a77be2aaac4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_name</th>\n",
       "      <th>category</th>\n",
       "      <th>sales</th>\n",
       "      <th>sales_percentile_in_category</th>\n",
       "      <th>market</th>\n",
       "      <th>profit</th>\n",
       "      <th>profit_percentile_in_market</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Tenex Lockers, Blue</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>408.0</td>\n",
       "      <td>0.962939</td>\n",
       "      <td>Africa</td>\n",
       "      <td>106.140</td>\n",
       "      <td>0.914759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Acme Trimmer, High Speed</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.779634</td>\n",
       "      <td>APAC</td>\n",
       "      <td>36.036</td>\n",
       "      <td>0.700327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Tenex Box, Single Width</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.624516</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>29.640</td>\n",
       "      <td>0.775701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Enermax Note Cards, Premium</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>45.0</td>\n",
       "      <td>0.489576</td>\n",
       "      <td>EU</td>\n",
       "      <td>-26.055</td>\n",
       "      <td>0.108500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Eldon Light Bulb, Duo Pack</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>114.0</td>\n",
       "      <td>0.305184</td>\n",
       "      <td>APAC</td>\n",
       "      <td>37.770</td>\n",
       "      <td>0.708144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Eaton Computer Printout Paper, 8.5 x 11</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0.565600</td>\n",
       "      <td>APAC</td>\n",
       "      <td>15.342</td>\n",
       "      <td>0.555763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Okidata Inkjet, Wireless</td>\n",
       "      <td>Technology</td>\n",
       "      <td>314.0</td>\n",
       "      <td>0.677695</td>\n",
       "      <td>Canada</td>\n",
       "      <td>3.120</td>\n",
       "      <td>0.182292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Hoover Microwave, White</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>276.0</td>\n",
       "      <td>0.931410</td>\n",
       "      <td>APAC</td>\n",
       "      <td>110.412</td>\n",
       "      <td>0.862207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Hewlett Wireless Fax, Laser</td>\n",
       "      <td>Technology</td>\n",
       "      <td>912.0</td>\n",
       "      <td>0.985307</td>\n",
       "      <td>APAC</td>\n",
       "      <td>-319.464</td>\n",
       "      <td>0.011998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Novimex Swivel Stool, Set of Two</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>667.0</td>\n",
       "      <td>0.912414</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>253.320</td>\n",
       "      <td>0.973156</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              product_name         category  sales  \\\n",
       "0                      Tenex Lockers, Blue  Office Supplies  408.0   \n",
       "1                 Acme Trimmer, High Speed  Office Supplies  120.0   \n",
       "2                  Tenex Box, Single Width  Office Supplies   66.0   \n",
       "3              Enermax Note Cards, Premium  Office Supplies   45.0   \n",
       "4               Eldon Light Bulb, Duo Pack        Furniture  114.0   \n",
       "5  Eaton Computer Printout Paper, 8.5 x 11  Office Supplies   55.0   \n",
       "6                 Okidata Inkjet, Wireless       Technology  314.0   \n",
       "7                  Hoover Microwave, White  Office Supplies  276.0   \n",
       "8              Hewlett Wireless Fax, Laser       Technology  912.0   \n",
       "9         Novimex Swivel Stool, Set of Two        Furniture  667.0   \n",
       "\n",
       "   sales_percentile_in_category  market   profit  profit_percentile_in_market  \n",
       "0                      0.962939  Africa  106.140                     0.914759  \n",
       "1                      0.779634    APAC   36.036                     0.700327  \n",
       "2                      0.624516    EMEA   29.640                     0.775701  \n",
       "3                      0.489576      EU  -26.055                     0.108500  \n",
       "4                      0.305184    APAC   37.770                     0.708144  \n",
       "5                      0.565600    APAC   15.342                     0.555763  \n",
       "6                      0.677695  Canada    3.120                     0.182292  \n",
       "7                      0.931410    APAC  110.412                     0.862207  \n",
       "8                      0.985307    APAC -319.464                     0.011998  \n",
       "9                      0.912414    EMEA  253.320                     0.973156  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['sales_percentile_in_category'] = df.groupby('category')['sales'].rank(pct=True)\n",
    "df['profit_percentile_in_market'] = df.groupby('market')['profit'].rank(pct=True)\n",
    "df[['product_name', 'category', 'sales', 'sales_percentile_in_category', 'market', 'profit', 'profit_percentile_in_market']].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb464a79-78c8-4824-87b5-dad8122bd03d",
   "metadata": {},
   "source": [
    "    This technique assigns a rank-based percentage score to each observation in a group. Percentile features are effective in capturing the relative position of a value within a group."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80f9e972-e640-4d60-ab85-12ebbb08cddd",
   "metadata": {},
   "source": [
    "# Frequency Encoding on sub_category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "aea9031e-cd25-4168-b163-2574ef35b654",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sub_category</th>\n",
       "      <th>sub_category_frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Storage</td>\n",
       "      <td>5059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Supplies</td>\n",
       "      <td>2425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Storage</td>\n",
       "      <td>5059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Paper</td>\n",
       "      <td>3538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Furnishings</td>\n",
       "      <td>3170</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  sub_category  sub_category_frequency\n",
       "0      Storage                    5059\n",
       "1     Supplies                    2425\n",
       "2      Storage                    5059\n",
       "3        Paper                    3538\n",
       "4  Furnishings                    3170"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sub_category_freq = df['sub_category'].value_counts()\n",
    "df['sub_category_frequency'] = df['sub_category'].apply(lambda x: sub_category_freq[x])\n",
    "df[['sub_category', 'sub_category_frequency']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c92e9ed9-4344-474f-b2c8-216efa4150fb",
   "metadata": {},
   "source": [
    "     This technique assigns a count of how many times each category appears in the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84d18bda-1e7f-42f7-bfbb-644237929809",
   "metadata": {},
   "source": [
    "# Mean Encoding on sub_category for sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2861b306-fdfc-4f10-9035-1d3665f6ea88",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sub_category</th>\n",
       "      <th>sales</th>\n",
       "      <th>sub_category_mean_sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Storage</td>\n",
       "      <td>408.0</td>\n",
       "      <td>185.534252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Supplies</td>\n",
       "      <td>120.0</td>\n",
       "      <td>87.157585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Storage</td>\n",
       "      <td>66.0</td>\n",
       "      <td>185.534252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Paper</td>\n",
       "      <td>45.0</td>\n",
       "      <td>69.052289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Furnishings</td>\n",
       "      <td>114.0</td>\n",
       "      <td>119.419282</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  sub_category  sales  sub_category_mean_sales\n",
       "0      Storage  408.0               185.534252\n",
       "1     Supplies  120.0                87.157585\n",
       "2      Storage   66.0               185.534252\n",
       "3        Paper   45.0                69.052289\n",
       "4  Furnishings  114.0               119.419282"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['sub_category_mean_sales'] = df.groupby('sub_category')['sales'].transform('mean')\n",
    "df[['sub_category', 'sales', 'sub_category_mean_sales']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f10c822-82dd-449b-9081-3def6dd740b9",
   "metadata": {},
   "source": [
    "     It assigns the average sales for sub-category on Dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fc84501-1559-4c5b-912c-015fd3cee3e1",
   "metadata": {},
   "source": [
    "# Frequency Encoding: ship_mode and segment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "477e41d4-f779-4fa0-a990-1b36834c21d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ship_mode</th>\n",
       "      <th>segment</th>\n",
       "      <th>ship_mode_segment</th>\n",
       "      <th>ship_mode_segment_frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Standard Class_Consumer</td>\n",
       "      <td>15876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Standard Class_Consumer</td>\n",
       "      <td>15876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Second Class</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Second Class_Consumer</td>\n",
       "      <td>5257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Second Class</td>\n",
       "      <td>Home Office</td>\n",
       "      <td>Second Class_Home Office</td>\n",
       "      <td>1854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>Standard Class_Consumer</td>\n",
       "      <td>15876</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ship_mode      segment         ship_mode_segment  \\\n",
       "0  Standard Class     Consumer   Standard Class_Consumer   \n",
       "1  Standard Class     Consumer   Standard Class_Consumer   \n",
       "2    Second Class     Consumer     Second Class_Consumer   \n",
       "3    Second Class  Home Office  Second Class_Home Office   \n",
       "4  Standard Class     Consumer   Standard Class_Consumer   \n",
       "\n",
       "   ship_mode_segment_frequency  \n",
       "0                        15876  \n",
       "1                        15876  \n",
       "2                         5257  \n",
       "3                         1854  \n",
       "4                        15876  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['ship_mode_segment'] = df['ship_mode'] + '_' + df['segment']\n",
    "ship_mode_segment_freq = df['ship_mode_segment'].value_counts()\n",
    "df['ship_mode_segment_frequency'] = df['ship_mode_segment'].apply(lambda x: ship_mode_segment_freq[x])\n",
    "df[['ship_mode', 'segment', 'ship_mode_segment', 'ship_mode_segment_frequency']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b725ee32-3f37-424c-a70e-6626c3139ce2",
   "metadata": {},
   "source": [
    "    For the frequency encoding, weâ€™ll combine multiple categorical columns to get a richer feature. Instead of just encoding ship_mode, we can create a joint frequency encoding using ship_mode and segment. This can capture the combination of how often each ship_mode appears within different segments."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0470d8f-aad6-427e-ab18-0f75a546bd69",
   "metadata": {},
   "source": [
    "# Mean Encoding: region and category based on sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "6e8b2aea-1139-49a7-a4b7-abaa9f135e84",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region</th>\n",
       "      <th>category</th>\n",
       "      <th>region_category</th>\n",
       "      <th>sales</th>\n",
       "      <th>region_category_mean_sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Africa</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Africa_Office Supplies</td>\n",
       "      <td>408.0</td>\n",
       "      <td>75.523328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Oceania_Office Supplies</td>\n",
       "      <td>120.0</td>\n",
       "      <td>101.710743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EMEA</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>EMEA_Office Supplies</td>\n",
       "      <td>66.0</td>\n",
       "      <td>70.224289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>North</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>North_Office Supplies</td>\n",
       "      <td>45.0</td>\n",
       "      <td>100.267642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Oceania_Furniture</td>\n",
       "      <td>114.0</td>\n",
       "      <td>295.404238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    region         category          region_category  sales  \\\n",
       "0   Africa  Office Supplies   Africa_Office Supplies  408.0   \n",
       "1  Oceania  Office Supplies  Oceania_Office Supplies  120.0   \n",
       "2     EMEA  Office Supplies     EMEA_Office Supplies   66.0   \n",
       "3    North  Office Supplies    North_Office Supplies   45.0   \n",
       "4  Oceania        Furniture        Oceania_Furniture  114.0   \n",
       "\n",
       "   region_category_mean_sales  \n",
       "0                   75.523328  \n",
       "1                  101.710743  \n",
       "2                   70.224289  \n",
       "3                  100.267642  \n",
       "4                  295.404238  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['region_category'] = df['region'] + '_' + df['category']\n",
    "region_category_mean_sales = df.groupby('region_category')['sales'].mean()\n",
    "df['region_category_mean_sales'] = df['region_category'].map(region_category_mean_sales)\n",
    "df[['region', 'category', 'region_category', 'sales', 'region_category_mean_sales']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5f14159-d91e-42af-b743-c2b4b4de8925",
   "metadata": {},
   "source": [
    "    For mean encoding, weâ€™ll calculate the mean of sales based on a combination of region and category. This way, we account for both the geographical and product-related aspects when understanding average sales, which provides a more nuanced feature than encoding by just one column."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f614cbc4-3386-490c-9a3d-4fe098ba4d7d",
   "metadata": {},
   "source": [
    "#  One-Hot Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "db7cc6bf-b251-4ff0-9a5b-0a6d1da5c935",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>order_date</th>\n",
       "      <th>ship_date</th>\n",
       "      <th>customer_name</th>\n",
       "      <th>state</th>\n",
       "      <th>country</th>\n",
       "      <th>market</th>\n",
       "      <th>product_id</th>\n",
       "      <th>product_name</th>\n",
       "      <th>sales</th>\n",
       "      <th>...</th>\n",
       "      <th>sub_category_Envelopes</th>\n",
       "      <th>sub_category_Fasteners</th>\n",
       "      <th>sub_category_Furnishings</th>\n",
       "      <th>sub_category_Labels</th>\n",
       "      <th>sub_category_Machines</th>\n",
       "      <th>sub_category_Paper</th>\n",
       "      <th>sub_category_Phones</th>\n",
       "      <th>sub_category_Storage</th>\n",
       "      <th>sub_category_Supplies</th>\n",
       "      <th>sub_category_Tables</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AG-2011-2040</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-06-01</td>\n",
       "      <td>Toby Braunhardt</td>\n",
       "      <td>Constantine</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Africa</td>\n",
       "      <td>OFF-TEN-10000025</td>\n",
       "      <td>Tenex Lockers, Blue</td>\n",
       "      <td>408.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>OFF-SU-10000618</td>\n",
       "      <td>Acme Trimmer, High Speed</td>\n",
       "      <td>120.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HU-2011-1220</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Annie Thurman</td>\n",
       "      <td>Budapest</td>\n",
       "      <td>Hungary</td>\n",
       "      <td>EMEA</td>\n",
       "      <td>OFF-TEN-10001585</td>\n",
       "      <td>Tenex Box, Single Width</td>\n",
       "      <td>66.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IT-2011-3647632</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-05-01</td>\n",
       "      <td>Eugene Moren</td>\n",
       "      <td>Stockholm</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>EU</td>\n",
       "      <td>OFF-PA-10001492</td>\n",
       "      <td>Enermax Note Cards, Premium</td>\n",
       "      <td>45.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>IN-2011-47883</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>2011-08-01</td>\n",
       "      <td>Joseph Holt</td>\n",
       "      <td>New South Wales</td>\n",
       "      <td>Australia</td>\n",
       "      <td>APAC</td>\n",
       "      <td>FUR-FU-10003447</td>\n",
       "      <td>Eldon Light Bulb, Duo Pack</td>\n",
       "      <td>114.0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 79 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id order_date  ship_date    customer_name            state  \\\n",
       "0     AG-2011-2040 2011-01-01 2011-06-01  Toby Braunhardt      Constantine   \n",
       "1    IN-2011-47883 2011-01-01 2011-08-01      Joseph Holt  New South Wales   \n",
       "2     HU-2011-1220 2011-01-01 2011-05-01    Annie Thurman         Budapest   \n",
       "3  IT-2011-3647632 2011-01-01 2011-05-01     Eugene Moren        Stockholm   \n",
       "4    IN-2011-47883 2011-01-01 2011-08-01      Joseph Holt  New South Wales   \n",
       "\n",
       "     country  market        product_id                 product_name  sales  \\\n",
       "0    Algeria  Africa  OFF-TEN-10000025          Tenex Lockers, Blue  408.0   \n",
       "1  Australia    APAC   OFF-SU-10000618     Acme Trimmer, High Speed  120.0   \n",
       "2    Hungary    EMEA  OFF-TEN-10001585      Tenex Box, Single Width   66.0   \n",
       "3     Sweden      EU   OFF-PA-10001492  Enermax Note Cards, Premium   45.0   \n",
       "4  Australia    APAC   FUR-FU-10003447   Eldon Light Bulb, Duo Pack  114.0   \n",
       "\n",
       "   ...  sub_category_Envelopes  sub_category_Fasteners  \\\n",
       "0  ...                   False                   False   \n",
       "1  ...                   False                   False   \n",
       "2  ...                   False                   False   \n",
       "3  ...                   False                   False   \n",
       "4  ...                   False                   False   \n",
       "\n",
       "   sub_category_Furnishings  sub_category_Labels sub_category_Machines  \\\n",
       "0                     False                False                 False   \n",
       "1                     False                False                 False   \n",
       "2                     False                False                 False   \n",
       "3                     False                False                 False   \n",
       "4                      True                False                 False   \n",
       "\n",
       "   sub_category_Paper  sub_category_Phones  sub_category_Storage  \\\n",
       "0               False                False                  True   \n",
       "1               False                False                 False   \n",
       "2               False                False                  True   \n",
       "3                True                False                 False   \n",
       "4               False                False                 False   \n",
       "\n",
       "  sub_category_Supplies  sub_category_Tables  \n",
       "0                 False                False  \n",
       "1                  True                False  \n",
       "2                 False                False  \n",
       "3                 False                False  \n",
       "4                 False                False  \n",
       "\n",
       "[5 rows x 79 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Perform One-Hot Encoding on selected categorical columns\n",
    "encoded_df = pd.get_dummies(df, columns=['ship_mode', 'segment', 'region', 'category', 'sub_category'], drop_first=True)\n",
    "\n",
    "# Check new columns after encoding\n",
    "encoded_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6568826-2298-4c81-a0bf-3d46176914e9",
   "metadata": {},
   "source": [
    "# Label Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e980a463-0d35-4096-8ad6-599627478fdc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_priority</th>\n",
       "      <th>order_priority_encoded</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Medium</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Medium</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>High</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>High</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Medium</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  order_priority  order_priority_encoded\n",
       "0         Medium                       3\n",
       "1         Medium                       3\n",
       "2           High                       1\n",
       "3           High                       1\n",
       "4         Medium                       3"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# Initialize the encoder\n",
    "label_encoder = LabelEncoder()\n",
    "\n",
    "# Encode specific columns\n",
    "df['order_priority_encoded'] = label_encoder.fit_transform(df['order_priority'])\n",
    "\n",
    "dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_)))\n",
    "\n",
    "# Verify the encoding\n",
    "df[['order_priority', 'order_priority_encoded']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9510c40-8c51-467a-92ec-dfd91339c453",
   "metadata": {},
   "source": [
    "# Target Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "f37511d9-d715-40a4-af9e-42b205c1c43b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>market</th>\n",
       "      <th>market_target_encoded</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Africa</td>\n",
       "      <td>19.374674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>APAC</td>\n",
       "      <td>39.772549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EMEA</td>\n",
       "      <td>8.728966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EU</td>\n",
       "      <td>37.282974</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>APAC</td>\n",
       "      <td>39.772549</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   market  market_target_encoded\n",
       "0  Africa              19.374674\n",
       "1    APAC              39.772549\n",
       "2    EMEA               8.728966\n",
       "3      EU              37.282974\n",
       "4    APAC              39.772549"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Perform target encoding for 'market' based on average profit\n",
    "market_target_encoding = df.groupby('market')['profit'].mean().to_dict()\n",
    "df['market_target_encoded'] = df['market'].map(market_target_encoding)\n",
    "\n",
    "# Verify target encoding\n",
    "df[['market', 'market_target_encoded']].head()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
